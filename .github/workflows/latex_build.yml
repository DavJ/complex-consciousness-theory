name: LaTeX build (all roots)

on:
  push:
  pull_request:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      roots: ${{ steps.discover.outputs.roots }}
    steps:
      - uses: actions/checkout@v4

      - id: discover
        name: Discover LaTeX roots
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t roots < <(git ls-files '*.tex' \
            | grep -Ev '^(vendor|node_modules|build|out|dist)/' \
            | xargs -r grep -l -E '\\documentclass')
          if [ ${#roots[@]} -eq 0 ]; then
            echo '[]' > roots.json
          else
            printf '%s\n' "${roots[@]}" | jq -R -s -c 'split("\n")[:-1]' > roots.json
          fi
          echo "roots=$(cat roots.json)" >> "$GITHUB_OUTPUT"

  compile:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        root: ${{ fromJson(needs.discover.outputs.roots) }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect compiler + paths
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          root="${{ matrix.root }}"
          dir="$(dirname "$root")"
          pdf="${root%.tex}.pdf"

          # pick compiler
          compiler="pdflatex"
          grep -Eq '^[[:space:]]*%!?TEX.*(xelatex|lualatex)' "$root" && compiler="xelatex"
          grep -Eq '\\usepackage\{(fontspec|polyglossia|unicode-math)\}' "$root" && compiler="xelatex"
          grep -Eq '\\usepackage\{(luacode|luaotfload)\}' "$root" && compiler="lualatex"

          # safe artifact name (no slashes etc.)
          safe_name="$(echo "$root" | tr '/\\:' '__')"

          {
            echo "dir=$dir"
            echo "pdf=$pdf"
            echo "compiler=$compiler"
            echo "safe_name=$safe_name"
          } >> "$GITHUB_OUTPUT"

      - name: LaTeX build ${{ matrix.root }}
        uses: xu-cheng/latex-action@v4
        with:
          root_file: ${{ matrix.root }}
          work_in_root_file_dir: true
          continue_on_error: true
          compiler: ${{ steps.detect.outputs.compiler }}
          pre_compile: |
            tlmgr update --self
            # Commonly needed packages
            tlmgr install \
              amsfonts amsmath mathtools siunitx physics \
              babel csquotes etoolbox geometry hyperref graphics graphicx url \
              pgf pgfplots tikz-cd standalone float caption subcaption \
              listings fancyvrb soul wrapfig mhchem ifmtarg kvoptions kvsetkeys pdftexcmds \
              biblatex biber \
              fontspec unicode-math polyglossia
          post_compile: |
            echo "Done."

      - name: Upload PDF (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pdf-${{ steps.detect.outputs.safe_name }}
          path: ${{ steps.detect.outputs.pdf }}
          if-no-files-found: ignore

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ steps.detect.outputs.safe_name }}
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.blg
            ${{ steps.detect.outputs.dir }}/*.fls
          if-no-files-found: ignore

