name: Build all LaTeX PDFs

on:
  push:
  pull_request:

jobs:
  discover:
    name: Discover LaTeX roots
    runs-on: ubuntu-latest
    outputs:
      roots: ${{ steps.discover.outputs.roots }}
    steps:
      - uses: actions/checkout@v4

      - id: discover
        run: |
          set -euo pipefail

          # Najdi všechny .tex soubory s \documentclass (vynecháme build/vendor)
          mapfile -t roots < <(git ls-files '*.tex' \
            | grep -Ev '^(vendor|node_modules|build|out|dist)/' \
            | xargs -r grep -l -E '\\documentclass')

          if [ ${#roots[@]} -eq 0 ]; then
            echo "Nebyly nalezeny žádné LaTeX root soubory."
            echo 'roots=[]' >> "$GITHUB_OUTPUT"
          else
            printf '%s\n' "${roots[@]}" \
              | jq -R -s -c 'split("\n")[:-1]' \
              | sed 's/^/roots=/' >> "$GITHUB_OUTPUT"
            echo "Nalezeno ${#roots[@]} root soubor(ů)."
          fi

  compile:
    name: compile (${{ matrix.root }})
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        root: ${{ fromJson(needs.discover.outputs.roots) }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect engine + paths
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          root="${{ matrix.root }}"
          dir="$(dirname "$root")"
          pdf="${root%.tex}.pdf"
          # bezpečný název pro artefakty (nahraď / za __)
          safe_root="${root//\//__}"

          # Heuristika pro volbu engine:
          engine="pdflatex"
          if grep -Eq '^[[:space:]]*%!?TEX.*(xelatex|lualatex)' "$root"; then
            engine="$(grep -Eo '^[[:space:]]*%!?TEX.*(xelatex|lualatex)' "$root" | grep -Eo '(xelatex|lualatex)' | head -n1)"
          fi
          grep -Eq '\\usepackage\{(fontspec|polyglossia|unicode-math)\}' "$root" && engine="xelatex"
          grep -Eq '\\usepackage\{(luacode|luaotfload)\}' "$root" && engine="lualatex"

          {
            echo "dir=$dir"
            echo "pdf=$pdf"
            echo "engine=$engine"
            echo "safe_root=$safe_root"
          } >> "$GITHUB_OUTPUT"

      - name: LaTeX build ${{ matrix.root }}
        uses: xu-cheng/latex-action@v4
        continue-on-error: true   # <- GH Actions ignoruje ten vadný exit code
        with:
          root_file: ${{ matrix.root }}
          work_in_root_file_dir: true
          continue_on_error: true
          post_compile: echo "ok" # (volitelné) ať se projde větev post_compile

      - name: Upload PDF
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pdf-${{ steps.detect.outputs.safe_root }}
          path: ${{ steps.detect.outputs.pdf }}
          if-no-files-found: ignore

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ steps.detect.outputs.safe_root }}
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.blg
            ${{ steps.detect.outputs.dir }}/*.fls
          if-no-files-found: ignore

