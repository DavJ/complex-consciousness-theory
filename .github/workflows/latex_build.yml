name: LaTeX – build all PDFs

on:
  push:
  pull_request:

jobs:
  discover:
    runs-on: ubuntu-latest
    outputs:
      roots: ${{ steps.discover.outputs.roots }}
    steps:
      - uses: actions/checkout@v4

      - id: discover
        name: Discover LaTeX roots
        shell: bash
        run: |
          set -euo pipefail
          # najdi .tex soubory, které obsahují \documentclass (tedy skutečné rooty)
          mapfile -t roots < <(git ls-files '*.tex' \
            | grep -Ev '^(vendor|node_modules|build|out|dist)/' \
            | xargs -r grep -l -E '\\documentclass')
          if [ ${#roots[@]} -eq 0 ]; then
            echo "roots=[]" >> "$GITHUB_OUTPUT"
          else
            printf '%s\n' "${roots[@]}" \
              | jq -R -s -c 'split("\n")[:-1]' \
              | sed 's/^/roots=/' >> "$GITHUB_OUTPUT"
          fi
          echo "Discovered roots: ${{ steps.discover.outputs.roots || '[]' }}"

  compile:
    needs: discover
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        root: ${{ fromJson(needs.discover.outputs.roots) }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect compiler + paths
        id: detect
        shell: bash
        run: |
          set -euo pipefail
          root="${{ matrix.root }}"
          dir="$(dirname "$root")"
          pdf="${root%.tex}.pdf"

          # výchozí kompilátor
          compiler="pdflatex"
          # „magic comment“ %!TEX a balíčky indikující xelatex/lualatex
          if grep -Eq '^[[:space:]]*%!?TEX.*xelatex' "$root"; then compiler="xelatex"; fi
          if grep -Eq '^[[:space:]]*%!?TEX.*lualatex' "$root"; then compiler="lualatex"; fi
          if grep -Eq '\\usepackage\{(fontspec|polyglossia|unicode-math)\}' "$root"; then compiler="xelatex"; fi
          if grep -Eq '\\usepackage\{(luacode|luaotfload)\}' "$root"; then compiler="lualatex"; fi

          echo "dir=$dir"       >> "$GITHUB_OUTPUT"
          echo "pdf=$pdf"       >> "$GITHUB_OUTPUT"
          echo "compiler=$compiler" >> "$GITHUB_OUTPUT"

      - name: LaTeX build ${{ matrix.root }}
        uses: xu-cheng/latex-action@v4
        with:
          root_file: ${{ matrix.root }}
          work_in_root_file_dir: true
          continue_on_error: true
          compiler: ${{ steps.detect.outputs.compiler }}
          # doplň balíčky před kompilací (ať to nikdy nespadne na tlmgr)
          pre_compile: |
            set -e
            tlmgr option repository http://mirror.ctan.org/systems/texlive/tlnet || true
            tlmgr update --self || true
            # široké kolekce + konkrétní balíčky (pozor: 'graphicx' je součástí 'graphics', 'slashed' je v bundle 'carlisle')
            tlmgr install \
              collection-latexrecommended \
              collection-fontsrecommended \
              collection-bibtexextra \
              collection-science \
              latexmk \
              carlisle \
              graphics pgf pgfplots tikz-cd cm-super xcolor \
              siunitx physics mathtools amsfonts amsmath \
              babel csquotes biblatex biber etoolbox \
              hyperref geometry soul url \
              standalone float caption subcaption \
              todonotes wrapfig mhchem ifmtarg kvoptions \
              listings fancyvrb pdftexcmds kvsetkeys \
              unicode-math fontspec polyglossia \
              || true
            tlmgr update --all || true
          post_compile: |
            echo "Kompilace dokončena pro ${{ matrix.root }}"

      - name: Upload PDF (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pdf-${{ matrix.root }}
          path: ${{ steps.detect.outputs.pdf }}
          if-no-files-found: ignore

      - name: Upload logs on failure (or always)
        if: failure() || always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.root }}
          path: |
            ${{ steps.detect.outputs.dir }}/*.log
            ${{ steps.detect.outputs.dir }}/*.blg
            ${{ steps.detect.outputs.dir }}/*.fls
            ${{ steps.detect.outputs.dir }}/*.aux
          if-no-files-found: ignore

